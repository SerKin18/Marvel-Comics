{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hooks.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/charSearchForm/charSearchForm.js","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComics","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","View","imgStyle","_jsxs","className","children","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRef","useRef","arr","item","i","CSSTransition","timeout","classNames","tabIndex","ref","el","current","onCharSelected","forEach","classList","remove","add","focus","TransitionGroup","component","renderItems","disabled","Skeleton","_Fragment","comicId","resourceURI","replace","Link","to","CharInfo","charId","skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","key","value","errorInfo","console","log","this","setState","Component","CharSearchForm","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","MainPage","selectedChar","Helmet","decoration"],"mappings":"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","file":"static/js/5.5e169641.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from '../errorMessage/error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img style={{ display: 'block', width: '250px', height: \"250px\", objectFit: \"contain\", margin: '0 auto' }} src={img} alt='error' />\r\n\t)\r\n}\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hooks\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=81185e568d5b18b9b6e0b9e849bbbaaa\";\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\treturn res.data.results.map(_transformCharacter);\r\n};\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n  const getComics = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      // optional chaining operator\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available\",\r\n    };\r\n  };\r\n  return {\r\n    loading,\r\n    error,\r\n    clearError,\r\n    getAllCharacters,\r\n\t getCharacterByName,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComics,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const clearError = useCallback(() => setError(null), []);\r\n  return { loading, request, error, clearError };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport \"./randomChar.scss\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nconst RandomChar = () => {\n  const [char, setChar] = useState({});\n\n  const {loading,error,getCharacter,clearError} = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar(), 60000);\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n\n  const updateChar = () => {\n\tclearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id)\n\t .then(onCharLoaded)\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button className=\"button button__main\">\n          <div className=\"inner\" onClick={updateChar}>\n            try it\n          </div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"unset\" };\n  }\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={imgStyle}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">HOMEPAGE</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">WIKI</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default RandomChar;\n","import { useState, useEffect, useRef } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport \"./charList.scss\";\n\nconst CharList = (props) => {\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(400);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst { loading, error, getAllCharacters } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllCharacters(offset).then(onCharListLoaded);\n\t};\n\n\tconst onCharListLoaded = (newCharList) => {\n\t\tlet ended = false;\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharList((charList) => [...charList, ...newCharList]);\n\t\tsetNewItemLoading((newItemLoading) => false);\n\t\tsetOffset((offset) => offset + 9);\n\t\tsetCharEnded((charEnded) => ended);\n\t};\n\n\tconst itemRef = useRef([]);\n\n\tconst focusOnItem = (id) => {\n\t\titemRef.current.forEach((item) =>\n\t\t\titem.classList.remove(\"char__item_selected\")\n\t\t);\n\t\titemRef.current[id].classList.add(\"char__item_selected\");\n\t\titemRef.current[id].focus();\n\t};\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { objectFit: \"cover\" };\n\t\t\tif (\n\t\t\t\titem.thumbnail ===\n\t\t\t\t\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n\t\t\t) {\n\t\t\t\timgStyle = { objectFit: \"unset\" };\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<CSSTransition key={item.id} timeout={500} classNames=\"char__item\">\n\t\t\t\t\t<li\n\t\t\t\t\t\tclassName=\"char__item\"\n\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\tref={(el) => (itemRef.current[i] = el)}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle} />\n\t\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t\t</li>\n\t\t\t\t</CSSTransition>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<ul className=\"char__grid\">\n\t\t\t\t<TransitionGroup component={null}>\n\t\t\t\t\t{items}\n\t\t\t\t</TransitionGroup>\n\t\t\t</ul>\n\n\t\t);\n\t}\n\n\tconst items = renderItems(charList);\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: charEnded ? \"none\" : \"block\" }}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport \"./charInfo.scss\";\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"unset\" };\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"there is no comics with this characters\"}\n\n        {comics.map((item, i) => {\n          const comicMail = \"http://gateway.marvel.com/v1/public/comics/\";\n          let comicId = item.resourceURI.replace(comicMail, \"\");\n          // eslint-disable-next-line\n          if (i > 9 && comicId.length < 4) return;\n          return (\n            <li key={i} className=\"char__comics-item\">\n              <Link to={`/comics/${comicId}`}>{item.name}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nCharInfo.propTypes = {\n  charId: PropTypes.string,\n};\n\nexport default CharInfo;\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({ error: true })\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage />\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\nimport './charSearchForm.scss'\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\n\r\nconst CharSearchForm = () => {\r\n\tconst [char, setChar] = useState(null);\r\n\tconst { loading, error, getCharacterByName, clearError } = useMarvelService();\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\r\n\tconst updateChar = (name) => {\r\n\t\tclearError();\r\n\r\n\t\tgetCharacterByName(name)\r\n\t\t\t.then(onCharLoaded);\r\n\t}\r\n\r\n\tconst errorMessage = error ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\r\n\tconst results = !char ? null : char.length > 0 ?\r\n\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t<div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\r\n\t\t\t<Link to={`characters/${char[0].id}`} className=\"button button__secondary\">\r\n\t\t\t\t<div className=\"inner\">To page</div>\r\n\t\t\t</Link>\r\n\t\t</div> :\r\n\t\t<div className=\"char__search-error\">\r\n\t\t\tThe character was not found. Check the name and try again\r\n\t\t</div>;\r\n\r\n\treturn (\r\n\t\t<div className=\"char__search-form\">\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tcharName: ''\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\t\tcharName: Yup.string().required('This field is required')\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={({ charName }) => {\r\n\t\t\t\t\tupdateChar(charName);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\r\n\t\t\t\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tid=\"charName\"\r\n\t\t\t\t\t\t\tname='charName'\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tplaceholder=\"Enter name\" />\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tclassName=\"button button__main\"\r\n\t\t\t\t\t\t\tdisabled={loading}>\r\n\t\t\t\t\t\t\t<div className=\"inner\">find</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t\t{results}\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CharSearchForm;","import { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\nimport CharSearchForm from \"../charSearchForm/charSearchForm\";\r\nconst MainPage = () => {\r\n\tconst [selectedChar, setChar] = useState(null);\r\n\r\n\tconst onCharSelected = (id) => {\r\n\t\tsetChar(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<Helmet>\r\n\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent=\"Marvel information portal\"\r\n\t\t\t\t/>\r\n\t\t\t<title>Marvel information </title>\r\n\t\t\t</Helmet>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharInfo charId={selectedChar} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharSearchForm />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MainPage;\r\n"],"sourceRoot":""}